@{
    ViewBag.Title = "Getting-Started-with-IndexedDB";
}
@section AdditionalScripts
{
    <script type="text/javascript" language="javascript">

        var indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;
        var IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction;
        var db;

        (function () {
            var peopleData = [
                { name: "John Doe", email: "john@company.com" },
                { name: "Don Doe", email: "don@company.com" }
            ];

            function initDb() {
                var request = indexedDB.open("PeopleDB", 2);
                request.onsuccess = function (evt) {
                    debugger;
                    db = request.result;

                    db.onversionchange = function(e) {
                        // This event is fired when a database is deleted.
                        console.log("Version change triggered, so closing database connection", e.oldVersion, e.newVersion, db);
                        db.close();
                    };
                    console.log("DB opened.", db, evt);
                    /* Code for ${db.open} */

                };

                request.onerror = function (evt) {
                    console.log("IndexedDB error: " + evt.target.errorCode);
                };

                request.onupgradeneeded = function (evt) {
                    debugger;
                    // This event is fired only if the requested, i.e. new version number is higher than the existing database;
                    // otherwise, it is not fired, and an error 12 is thrown, which is probably a new version number is earlier
                    // than requested version number message.

                    var localDB = evt.currentTarget.result;

                    // Check if object store with the same name already exists, and if it does, delete it before recreating it;
                    // otherwise, an error is thrown: A mutation operation was attempted on a database that did not allow mutations.
                    // NOTE: This appears to  be the only place where an objectStore can be deleted without throwing a mutation error.

                    if (localDB.objectStoreNames.contains("people")) {
                        localDB.deleteObjectStore("people");
                    }

                    // Make sure that an objectStore with the name does not already exist or this fails with an error.
                    // See above.
                    var objectStore = localDB.createObjectStore("people", { keyPath: "id", autoIncrement: true });

                    objectStore.createIndex("name", "name", { unique: false });
                    objectStore.createIndex("email", "email", { unique: true });

                    for (i in peopleData) {
                        objectStore.add(peopleData[i]);
                    }
                };
            }

            // Output all the people in the objectStore to the web page,
            // including a delete link to remove the record.
            function renderPeople(id, name, email){
                var people = $("#peopleList")[0];
                var li = document.createElement("li");
                var a = document.createElement("a");

                var t = document.createTextNode(id + ": " + name + "; " + email);

                a.addEventListener("click", function() {
                    indexedDB.deletePerson(id);
                }, false);

                a.textContent = " [Delete]";
                li.appendChild(t);
                li.appendChild(a);
                people.appendChild(li);
            }

            // Once the page content has been loaded, wire up all the buttons, event listeners and database functions:
            function contentLoaded() {
                initDb();

                // Add all the button related event listeners:

                var btnAdd = document.getElementById("btnAdd");
                var btnDelete = document.getElementById("btnDelete");
                var btnDeleteAll = document.getElementById("btnDeleteAll");
                var btnDeleteDatabase = document.getElementById("btnDeleteDatabase");
                var btnPrint = document.getElementById("btnPrint");
                var btnSearchByName = document.getElementById("btnSearchByName");
                var btnSearchByEmail = document.getElementById("btnSearchByEmail");

                btnAdd.addEventListener("click", function () {
                    //var output = document.getElementById("peopleList");
                    // or
                    var output = $("#peopleList")[0];

                    var name = document.getElementById("txtName").value;
                    var email = document.getElementById("txtEmail").value;

                    var transaction = db.transaction("people", IDBTransaction.READ_WRITE);
                    var objectStore = transaction.objectStore("people");
                    var request = objectStore.add({ name: name, email: email });
                    request.onsuccess = function (evt) {
                        debugger;
                        indexedDB.getAllPeople();
//                        // do something after the add succeeded
//                        var request2 = objectStore.openCursor();
//                        output.innerHTML = "";
//                        request2.onsuccess = function(evt2) {

//                            var cursor = evt2.target.result;
//                            if (cursor) {
//                                output.innerHTML += "id: " + cursor.key + " is " + cursor.value.name + "<br />";
//                                cursor.continue();
//                            }
//                        };
                    };
                }, false);

                btnSearchByName.addEventListener("click", function () {
                    var output = $("#peopleList")[0];
                    output.innerHTML = "";
                    var name = document.getElementById("txtName").value;

                    var objectStore = db.transaction("people").objectStore("people");
                    var index = objectStore.index("name");
                    index.get(name).onsuccess = function (evt) {
                        debugger;
                        renderPeople(evt.target.result.id, evt.target.result.name, evt.target.result.email);
                    };
                }, false);

                btnSearchByEmail.addEventListener("click", function () {
                    var output = $("#peopleList")[0];
                    output.innerHTML = "";
                    var email = document.getElementById("txtEmail").value;

                    var objectStore = db.transaction("people").objectStore("people");
                    var index = objectStore.index("email");
                    index.get(email).onsuccess = function (evt) {
                        debugger;
                        renderPeople(evt.target.result.id, evt.target.result.name, evt.target.result.email);
                    };
                }, false);

                btnDelete.addEventListener("click", function () {
                    var id = document.getElementById("txtID").value;
                    var transaction = db.transaction("people", IDBTransaction.READ_WRITE);
                    var objectStore = transaction.objectStore("people");
                    var request = objectStore.delete(id);
                    request.onsuccess = function(evt) {
                        // It's gone!
                    };
                }, false);

                btnDeleteAll.addEventListener("click", function () {
                    var transaction = db.transaction("people", IDBTransaction.READ_WRITE);
                    var objectStore = transaction.objectStore("people");
                    var request = objectStore.clear();
                    request.onsuccess = function (evt) {
                        // do something after the clear succeeded
                        $("#printOutput")[0].innerHTML = "";
                        $("#peopleList")[0].innerHTML = "";
                    };
                 }, false);

                btnDeleteDatabase.addEventListener("click", function () {
                    console.log("Trying to delete database");
                    try {
                      var dbDeleteRequest = window.indexedDB.deleteDatabase("PeopleDB");
                      dbDeleteRequest.onsuccess = function(e){
                        console.log("Database successfully deleted");
                        /* Code for ${db.open} */
                      };
                      dbDeleteRequest.onupgradeneeded = function(e){
                          debugger;
                        var db = dbOpenRequest.result;
                        console.log("Database upgrade needed");
                        /* Code for ${db.upgrade} */
                      };
                      dbDeleteRequest.onerror = function(e){
                        console.log("Error deleting DB");
                      };
                      dbDeleteRequest.onblocked = function(e){
                        console.log("Deleting DB Blocked. Try closing the database and then deleting it", dbDeleteRequest.error, e.type);
                      };
                    } catch (e) {
                      console.log(e);
                    }
                 }, false);

                btnPrint.addEventListener("click", function() {

                    var output = document.getElementById("printOutput");
                    output.textContent = "";

                    var transaction = db.transaction("people", IDBTransaction.READ_WRITE);
                    var objectStore = transaction.objectStore("people");

                    var request = objectStore.openCursor();
                    request.onsuccess = function(evt) {
                        var cursor = evt.target.result;

                        if (cursor) {
                            output.innerHTML += "id: " + cursor.key + " is " + cursor.value.name + "<br />";
                            cursor.continue();
                        } else {
                            console.log("No more entries!");
                        }
                    };
                }, false);

                // Add all the database, non-button related functions:

                indexedDB.onerror = function(e) {
                    console.log(e);
                };

                indexedDB.deletePerson = function(id) {
                    var trans = db.transaction("people", IDBTransaction.READ_WRITE);
                    var store = trans.objectStore("people");

                    var request = store.delete(id);

                    request.onsuccess = function(e) {
                        indexedDB.getAllPeople();
                    };

                    request.onerror = function(e) {
                        console.log("Error Adding: ", e);
                    };
                };

                indexedDB.getAllPeople = function() {

                    var people = $("#peopleList")[0];
                    people.innerHTML = "";

                    var trans = db.transaction("people", IDBTransaction.READ_WRITE);
                    var store = trans.objectStore("people");

                    // Get everything in the store;
                     var cursorRequest = store.openCursor();

                    cursorRequest.onsuccess = function(e) {
                        var result = e.target.result;

                        if(!!result == false)
                            return;

                        renderPeople(result.key, result.value.name, result.value.email);
                        result.continue();
                    };

                    cursorRequest.onerror = indexedDB.onerror;
                };
            }

            window.addEventListener("DOMContentLoaded", contentLoaded, false);
    })();

    </script>
}
<h2>@ViewBag.Message</h2>
<hr />
<br />
<input type="button" id="btnSearchByName" value="Search by Name" />
<label for="txtName">
    Name:
</label>
<input type="text" id="txtName" name="txtName" />
<br />
<input type="button" id="btnSearchByEmail" value="Search by Email" />
<label for="txtEmail">
    Email:
</label>
<input type="email" id="txtEmail" name="txtEmail" />
<br />
<ul>
    <div id="peopleList">
    </div>
</ul>
<br />
<input type="button" id="btnAdd" value="Add Record" />
<br />
<label for="txtID">
    ID:
</label>
<input type="text" id="txtID" name="txtID" />
<br />
<input type="button" id="btnDelete" value="Delete Record by Id" />
<br />
<input type="button" id="btnDeleteAll" value="Delete All Records" />
<br />
<input type="button" id="btnDeleteDatabase" value="Delete Database" />
<br />
<input type="button" id="btnPrint" value="Print objectStore" />
<br />
<output id="printOutput">
        </output>